name: Build and Package

on:
  push:
    branches: [main, master]
    tags: ["v*"]
  pull_request:
    branches: [main, master]

jobs:
  package:
    name: Package for ${{ matrix.os }} with components separated
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
        build_type: [Release]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake rpm dpkg
        timeout-minutes: 5

      - name: Install NSIS (Windows)
        if: runner.os == 'Windows'
        run: |
          choco install nsis
        timeout-minutes: 5

      - name: Configure CMake
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=${{matrix.build_type}} --log-level=VERBOSE
        timeout-minutes: 10

      - name: Build
        run: |
          cmake --build build --config ${{matrix.build_type}} --verbose
        timeout-minutes: 20

      - name: Package All Components
        run: |
          cd build
          cpack -G ZIP
        timeout-minutes: 10

      - name: List generated packages
        run: |
          ls -la build/
        shell: bash

      - name: Upload Server Package
        uses: actions/upload-artifact@v4
        with:
          name: mcp-server-${{ matrix.os }}
          path: |
            build/*server.zip
          if-no-files-found: error
        timeout-minutes: 5

      - name: Upload Plugins Package
        uses: actions/upload-artifact@v4
        with:
          name: mcp-plugins-${{ matrix.os }}
          path: |
            build/*plugins.zip
          if-no-files-found: error
        timeout-minutes: 5

  release:
    name: Create Release
    needs: [package]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            */*server*.zip
            */*plugins*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}